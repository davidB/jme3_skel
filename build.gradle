buildscript {
    repositories {
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath 'com.netflix.nebula:gradle-extra-configurations-plugin:1.12.+'
        classpath 'net.alchim31.gradle:gradle-getdown-plugin:0.4.1'
    }
}

apply plugin: 'provided-base'
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'application'
apply plugin: 'net.alchim31.getdown'

sourceCompatibility = '1.8'
targetCompatibility = '1.8'
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

repositories {
    mavenLocal()
    jcenter()
//  maven { url "http://updates.jmonkeyengine.org/maven/"}
    maven { url "http://dl.bintray.com/jmonkeyengine/contrib" }
    maven { url "https://jitpack.io"  }
}

dependencies {
    compile "org.jmonkeyengine:jme3-core:${v_jme}"
    compile "org.slf4j:slf4j-api:${v_slf4j}"
    compile "com.jme3x:jfx:1.+"
    compile 'com.squareup.dagger:dagger:1.2.2'
    compile 'com.squareup.dagger:dagger-compiler:1.2.2'
    compile 'com.netflix.rxjava:rxjava-core:0.19.2'
    compile 'net.alchim31.jme3:jme3_ext:0.2.0'
    runtime 'net.alchim31.jme3:jme3_ext:0.2.0:textures'
    runtime "org.jmonkeyengine:jme3-lwjgl:${v_jme}"
    runtime("org.jmonkeyengine:jme3-desktop:${v_jme}"){
        exclude module: "jinput"
    }
    runtime 'net.java.jinput:jinput:2.0.6'
    runtime "org.jmonkeyengine:jme3-jogg:${v_jme}"
    //runtime "org.slf4j:slf4j-jdk14:${v_slf4j}"
    compile "org.slf4j:jul-to-slf4j:${v_slf4j}"
    runtime 'ch.qos.logback:logback-classic:1.1.2'
    testCompile 'junit:junit:4.11'
    testCompile 'org.mockito:mockito-core:1.8.5'
}

sourceSets {
    main {
        resources {
            srcDirs = ["$projectDir/src/main/resources", "$projectDir/src/main/assets", "$projectDir/assets"]
            exclude "**/*.blend*"
        }
    }
}

//------------------------------------------------------------------------------

task copyDeps {
    description 'copy runtime + testRuntime dependencies into lib/ dir to allow other tools (jme3-SDK, eclipse apt-processor) to use libs'
    copy {
        from configurations.runtime
        into 'lib/main'
    }
    copy {
        from (configurations.testRuntime - configurations.runtime)
        into 'lib/test'
    }
}

//------------------------------------------------------------------------------
mainClassName = 'jme3_skel.Main'
applicationDefaultJvmArgs = ['-ea']

import bundles.Platform
getdown {
    urlbase = "http://alchim31.net/download/jme3_skel"
    checklatest = false
    mainClassName = project.mainClassName
    jvmArgs = project.applicationDefaultJvmArgs
    //platforms = [Platform.LINUX_I586, Platform.LINUX_X64, Platform.WINDOWS_I586] //Platform.values()
    //platforms = [Platform.LINUX_I586] //Platform.values()
    tmplGetdownTxt = tmplGetdownTxt + "\nallow_offline = true"
}
//project.afterEvaluate {
//  project.getdown.distSpec.eachFile {
//      println "$it.name"
//  }
//}
